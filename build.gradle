buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    ext {
        projectVersion = '0.1.0.RELEASE'
        vertxVersion = '4.0.0-milestone4'
        springBootVersion = '2.3.3.RELEASE'
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'idea'
    id 'org.springframework.boot' version '2.3.3.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' apply false
}

repositories {
    maven { url "https://maven.aliyun.com/repository/public" }
    maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
    maven { url "https://maven.aliyun.com/repository/spring" }
    maven { url "https://maven.aliyun.com/repository/spring-plugin" }
    mavenCentral()
}

group = 'com.github.Project5E'
version = projectVersion

subprojects { project ->

    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "java-library"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
//    if (project.name != "simple") {
//        apply plugin: 'maven'
//    }

    group = 'com.github.Project5E'
    version = projectVersion

    compileJava {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
        options.encoding = 'UTF-8'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
        maven { url "https://maven.aliyun.com/repository/spring" }
        maven { url "https://maven.aliyun.com/repository/spring-plugin" }
        mavenCentral()
    }

    dependencies {
        api 'org.springframework.boot:spring-boot-starter'
        api 'org.springframework.boot:spring-boot-starter-aop'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        // vertx
        compileOnly "io.vertx:vertx-core:$vertxVersion"
        compileOnly "io.vertx:vertx-service-proxy:$vertxVersion"
        compileOnly "io.vertx:vertx-codegen:$vertxVersion:processor"


        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // utils
        implementation 'org.apache.commons:commons-lang3:3.9'
        implementation 'org.apache.commons:commons-collections4:4.4'
    }
}